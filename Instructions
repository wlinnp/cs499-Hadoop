Commands
--------
Job 1 -
hadoop jar 499A3/Hadoop-0.0.1-SNAPSHOT.jar edu.cpp.cs499.A3.UserCount.UserCountDriver 499A3/TrainingRatings.txt 499A3/UserCountRes
--> get User IDs and number of votes
Job 2 -
hadoop jar 499A3/Hadoop-0.0.1-SNAPSHOT.jar edu.cpp.cs499.A3.UserSort.UserSortDriverTop 499A3/UserCountRes/part-r-00000 499A3/UserSortTopRes 10
--> get top 10 User IDs with highest number of votes
Job 3 -
hadoop jar 499A3/Hadoop-0.0.1-SNAPSHOT.jar edu.cpp.cs499.A3.UserSort.UserSortDriver 499A3/UserCountRes/part-r-00000 499A3/UserSortRes
--> get number of votes and User IDs sorted in descending order. 

Job 4 -
hadoop jar 499A3/Hadoop-0.0.1-SNAPSHOT.jar edu.cpp.cs499.A3.MovieRating.MovieRatingDriver 499A3/TrainingRatings.txt 499A3/MovieRatingRes
--> get Movie IDs and average ratings
Job 5 -
hadoop jar 499A3/Hadoop-0.0.1-SNAPSHOT.jar edu.cpp.cs499.A3.MovieMapping.MovieMappingDriver 499A3/MovieRatingRes/part-r-00000 499A3/movie_titles.txt 499A3/MovieMappingRes
--> get Movie Names and average ratings
Job 6 -
hadoop jar 499A3/Hadoop-0.0.1-SNAPSHOT.jar edu.cpp.cs499.A3.MovieSort.MovieSortDriverTop 499A3/MovieMappingRes/part-r-00000 499A3/MovieSortTopRes 10
--> get top ten movies with highest average ratings
Job 7 -
hadoop jar 499A3/Hadoop-0.0.1-SNAPSHOT.jar edu.cpp.cs499.A3.MovieSort.MovieSortDriver 499A3/MovieMappingRes/part-r-00000 499A3/MovieSortRes
--> get highest to lowest average ratings and movie names
=================================================

===================================================
Cascaded Jobs
-------------
hadoop jar 499A3/Hadoop-0.0.1-SNAPSHOT.jar edu.cpp.cs499.A3.MovieDriverTop 499A3/TrainingRatings.txt 499A3/movie_titles.txt 499A3/AllOutput 10 10

Files
-----
Copied 2 files from output
MoviesSortingTop: Top Average Rating Movies
UserSortingTop: Top users with highest numbers of votes




